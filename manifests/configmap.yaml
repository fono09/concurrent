apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
data:
  init.sql: |-
    CREATE DATABASE concurrent;
    \c concurrent
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE TABLE characters (
      author varchar(1024),
      schema varchar(1024),
      PRIMARY KEY(author, schema),
      payload jsonb,
      signature varchar(1024),
      cdate TIMESTAMPTZ NOT NULL DEFAULT clock_timestamp()
    );
    CREATE TABLE associations (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      author varchar(1024),
      schema varchar(1024),
      target UUID,
      payload jsonb,
      signature varchar(1024),
      cdate TIMESTAMPTZ NOT NULL DEFAULT clock_timestamp()
    );
    CREATE TABLE messages (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      author varchar(1024),
      schema varchar(1024),
      payload jsonb,
      signature varchar(1024),
      cdate TIMESTAMPTZ NOT NULL DEFAULT clock_timestamp(),
      associations UUID[]
    );

    CREATE FUNCTION attach_association() RETURNS TRIGGER AS $attach_association$
    BEGIN
      UPDATE messages
        SET associations = ARRAY_APPEND(associations, NEW.id)
        WHERE id = NEW.target;
      return NEW;
    END;
    $attach_association$
    LANGUAGE plpgsql;

    CREATE TRIGGER attach_association_trigger
      AFTER INSERT
      ON associations
      FOR EACH ROW EXECUTE FUNCTION attach_association();

    CREATE FUNCTION detach_association() RETURNS TRIGGER AS $detach_association$
    BEGIN
      UPDATE messages
        SET associations = ARRAY_REMOVE(associations, OLD.id)
        WHERE id = NEW.target;
      return OLD;
    END;
    $detach_association$
    LANGUAGE plpgsql;

    CREATE TRIGGER detach_association_trigger
      BEFORE DELETE 
      ON associations
      FOR EACH ROW EXECUTE FUNCTION detach_association();

