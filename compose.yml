version: "3"

services:
  ccgateway:
    build:
      context: .
      dockerfile: ./cmd/gateway/Dockerfile
    restart: always
    links:
      - db
      - redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./config:/etc/concurrent/:ro

  ccapi:
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    restart: always
    links:
      - db
      - redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./config:/etc/concurrent/:ro

  ccactivitypub:
    build:
      context: .
      dockerfile: ./cmd/activitypub/Dockerfile
    restart: always
    links:
      - db
      - redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./config:/etc/concurrent/:ro

        #  ccwebui:
        #    build:
        #      context: .
        #      dockerfile: ./web/Dockerfile
        #    restart: always
        #    ports:
        #      - "8001:80"

  db:
    restart: always
    image: postgres
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 5s
      retries: 20
    volumes:
      - ./_composeData/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_PASSWORD=postgres"
      - "POSTGRES_DB=concurrent"

  redis:
    restart: always
    image: redis
    volumes:
      - ./_composeData/redis:/data
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20
    ports:
      - "6379:6379"
  
